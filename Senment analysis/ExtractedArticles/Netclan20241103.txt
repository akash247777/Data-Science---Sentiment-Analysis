Title: Auvik, Connectwise integration in Grafana - Blackcoffer Insights

Home
Our Success Stories
Auvik, Connectwise integration in Grafana
Our Success Stories
IT
Production & manufacturing
Auvik, Connectwise integration in Grafana
By
Ajay Bidyarthy
-
July 13, 2022
6336
Client Background
Client:
A Leading Tech Firm in the USA
Industry Type:
IT & Consulting
Services:
Software, Business Solutions, Consulting
Organization Size:
200+
Project Objective
Get statistics such as uptime,  availability, cpu throughput etc. from Auvik and Connectwise and make a dashboard from it in Grafana.
Project Description
Unlike many technologies for which plugins are readily available in Grafana, there are none for auvik and Connectwise. So our task was to device a solution through which all the data from Auvik and Connectwise can be fed to Grafana. This data then would be used to plot graphs in Grafana.
Our Solution
Setup Postgres on linux
Create appropriate databases, tables and users in it.
Use python to get data from Auvik and Connectwise and perform necessary preprocesing.
In the same python file, Connect to our postgres database.
Ingest this data into postgres database.
Setup Grafana.
Connect Grafana to postgres using the postgres plugin.
Query our postgres database in Grafana to get desired results.
Plot multiple graphs according to client’s requirement and make a dashboard from it
Project Deliverables
Setup Postgres
Setup Postrges in Grafana
Write Python code to get data from Auvik and Connectwise into Postrges
Plot graphs into Grafana according to client’s requirement
Make dashboards for all the graphs
Tools used
Grafana
Postgres
Vs Code
AWS
Postman
Language/techniques used
Python
bash
Skills used
Python
networking
Data visualisation
Databases used
Postgres
Web Cloud Servers used
Amazon Web Services (AWS)
What are the technical Challenges Faced during Project Execution
Since, the data received from Auvik was in Json fromat, our first approach was to use Grafana’s built-in Json plugin. But this wasn’t working since, the data received from Auvik was multi-dimensional when the Json plugin required One dimensional data.
How the Technical Challenges were Solved
The above challenge was addressed by transforming the multi- dimensional data into one dimensional when it was store in a python variable. This transformed data was then inserted into Postgres.
Project Snapshots
Project website url
https://github.com/AjayBidyarthy/Henry-Pardo
Project Video
https://www.youtube.com/watch?v=7CcbdfjkBzc&ab_channel=Blackcoffer
Previous article
Data integration and big data performance using Elasticsearch
Next article
Portfolio: Website, Dashboard, SaaS Applications, Web Apps
Ajay Bidyarthy
RELATED ARTICLES
MORE FROM AUTHOR
Integrating Machine Learning Code into Kubeflow Pipeline – Kuberflow MLOps Kubernetes
Facial Recognition Attendance System
Face Recognition Using DeepFace
MOST POPULAR INSIGHTS
HR Analytics Dashboard
October 3, 2020
Big Data solution to an online multivendor marketplace eCommerce business
January 16, 2022
Website Tracking and Insights using Google Analytics, & Google Tag Manager
July 1, 2022
How to increase social media engagement for marketers?
August 15, 2020
Load more
RECOMMENDED INSIGHTS
Advanced AI for Handgun Detection
SEO Tool – AI and Data Driven
Sentiment Analysis Bot for Price Prediction
Healthcare Data Dashboard in Kibana